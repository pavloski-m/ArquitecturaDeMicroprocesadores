Respuesta de guía de preguntas de guía teórica

==================Preguntas Orientadoras======================

1 - Describa brevemente los diferentes perfiles de familias de microprocesadores/microcontroladores de ARM. Explique alguna de sus diferencias características.

La familia de microcontroladores de ARM se pueden dividir en 3 grandes grupos:

Procesadores ARM Clásicos (ARMx):  Estos procesadores son los más utilizados en desarrollos pequeños y simples. Tienen aceptable performance de proceso pero poca capacidad de memoria.
Dentro de este grupo podemos encontrar diferentes familias de microcontroladores con su arquitectura particular, por ejemplo ARM7 con arquitectura ARMv4, ARM9 con ARMv5 y ARM11 con ARMv6.


Procesadores Cortex Embebidos (Cortex Mx y Cortex Rx): 

Los procesadores Cortex serie R son diseñados para aplicaciones en tiempo real. Estos proporcionan alta confiabilidad, tolerancia a fallas y respuesta en tiempo real. Se utilizan en sistemas en donde se requiere un alto rendimiento y los plazo de tiempo son importantes.
Cortex-R → tienen arquitectura ARMv7-R.

En cambio los Cortex serie M con menores prestaciones son opciones mas económicas para aplicaciones deterministas y tienen perfil de microcontrolador. Estos procesadores son eficientes energeticamente, fáciles de implementar y son principalmente desarrollados para aplicaciones embebidas avanzadas.
Cortex-M → tienen arquitectura ARMv6-M y ARMv7-M.

=======================Cortex-M===============================

1. Describa brevemente las diferencias entre las familias de procesadores Cortex M0, M3 y M4.

Los microprocesadores Cortex-M0 y Cortex-M0+ tienen arquitectura ARMv6-M en cambio los Cortex M3 y M4 tienen arquitectura ARMv7-M
Los microprocesadores M0 estan diseñados para procesamiento general de datos, alta pérformance en control de I/O, señales mixtas ASICs y son reemplazo de los MCUs de 8/16 bits

Los Cortex-M3 tienen alta performance en procesamiento de dato y control de I/O, agrega instrucciones para realizar tareas complejas. Incluye instrucciones de división y multiplicación y ademas un módulo de debug para depurar el software.

Los Cortex-M4 son similares a los Cortex-M3 con el agregado de instrucciones de procesamiento de señales (DSP).


2. ¿Por qué se dice que el set de instrucciones Thumb permite mayor densidad de código? Explique
El set estandar de instrucciones de ARM es de 32 bits, los procesadores nuevos (desde el ARM7) en adelante, poseen un set reducido de instrucciones de 16 bits, que contiene las instrucciones mas habituales. Esto permite que se pueda escribir mas instrucciones en menor memoria de programa. Lo que se puede escribir en Thumb puede escribirse en set ARM pero no al revés.


3. ¿Qué entiende por arquitectura load-store? ¿Qué tipo de instrucciones no posee este tipo de arquitectura?
La arquitectura Load-Store opera a través de los registros, ya que estos tienen una velocidad de lectura y escritura mayor a la de la memoria. Se busca disminuir la frecuencia de acceso a la memoria . Por lo tanto la única manera de acceder a la memoría es a través de los registros, para leerla se carga (load) un registro y para escribirla se guarda (store) desde un registro.
Este tipo de arquitectura no posee instrucciones entre datos directos a memoria, por ejemplo MOV [direccionMemoria1], [direccionMemoria2]

4. ¿Cómo es el mapa de memoria de la familia?
Los microcontroladores de ARM no vienen con una cantidad de memoria establecida, la decisión de esto se delega a los fabricantes que los implementan. En lugar de esto se provee de bus de acceso a memoria y un mapa de memoria esablecido de 4Gb.
Este mapa de 4Gb se describen a continuación:
* 0x00000000 - 0x1FFFFFFF: (512 Mb) (Código) Es el espacio de memoria designado al código de programa. Esta área también permite acceso de datos.
* 0x20000000 - 0x3FFFFFFF: (512 Mb) (SRAM) Este espacio esta designado a la conexión de memoria RAM estática (SRAM), tiene una porción direccionable por bit y puede ejecturase código de programa desde esta regíon.
* 0x40000000 - 0x5FFFFFFF: (512 Mb) (Periféricos) Es utilizado mayormente para los periféricos del chip. El primer Mb puede ser direccionable bit a bit.
* 0x60000000 - 0x9FFFFFFF: (512 Mb + 512 Mb) (RAM) Este Gb va a poder usarse para almacenamiento como para código de programa.
* 0xA0000000 - 0xDFFFFFFF: (512 Mb + 512 Mb) (Dispositivos) Este Gb se usa para otros periféricos como por ejemplo los periféricos ajenos al chip.
* 0xE0000000 - 0xFFFFFFFF: (512 Mb) (Sistema) - Esta región está compuesta de varios bloques:
			0xE0000000 to 0xE003FFFF - Internal Private Peripheral Bus (IPPB)
			0xE0040000 to 0xE00FFFFF - External Private Peripheral Bus (EPPB)
			0xE0100000 to 0xFFFFFFFF - Para uso específico del fabricante.
			
			
5. ¿Qué ventajas presenta el uso de los “shadowed pointers” del PSP y el MSP?
Tener dos Stack Pointers separados permite al sistema ser mas robusto y seguro. Generalmente se le da el control del Main Stack Pointer (MSP) al proceso crítico, como ser el sistema operativo, y el Prosses Stack Pointer (PSP) a la aplicación.

Este tipo de arreglo tiene muchos beneficios:
* Si un problema de una tarea de la aplicación corrompe el PSP, el sistema operativo usa la información del MSP y puede seguir su curso sin errores.
* Cada tarea utiliza tanto espacio como saltos anidados posea, ya que el las interrupciones anidadas se manejan en el MSP
* Facilita la creación de un OS eficiente para los procesadores Cortex.

6. Describa los diferentes modos de privilegio y operación del Cortex M, sus relaciones y como se conmuta de uno al otro. Describa un ejemplo en el que se pasa del modo
privilegiado a no priviligiado y nuevamente a privilegiado.









